racket_midi
===========
Glue for using PortMIDI from Racket/DrRacket

Credits:
- The Racket community for providing extensive (if not prosaic) documentation
  about linking Racket and external code
- Matthew Flatt for his time and good advice


midi_extension.cpp	- interface between Racket and C++
midi_io.h		- C++ wrapper for PortMIDI (header)
midi_io.cpp		- C++ wrapper for PortMIDI (implementation)
midi_init.rkt		- Racket example to get you started

The shared object will be created as follows:
compiled/native/x86_64-linux/3m/midi_extension_rkt.so

To use it:
(require "midi_extension.rkt")


These procedures are at your disposal:
 
 * (list-midi-devices)
 * (set-midi-input <device number>)
 * (set-midi-output <device number>)
 * (start-midi-io)
 * (stop-midi-io)
 * (note-on <channel> <pitch> <velocity>)
 * (note-off <channel> <pitch> <velocity>)
 * (read-midi-event)


/*
typedef struct device_info
{
  int index;
  char direction; // 1: in, 2: out, 3: duplex
  string name;
};
*/

/*

 building a list of lists

  device_info_detail[0][0]=scheme_make_integer(42);
  device_info_detail[0][1]=scheme_make_utf8_string("Een");
  device_info_detail[1][0]=scheme_make_integer(42);
  device_info_detail[1][1]=scheme_make_utf8_string("Twee");
  device_info[0]=scheme_build_list(2,device_info_detail[0]);
  device_info[1]=scheme_build_list(2,device_info_detail[1]);
*/



